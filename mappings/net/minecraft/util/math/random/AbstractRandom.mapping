CLASS net/minecraft/class_5819 net/minecraft/util/math/random/AbstractRandom
	COMMENT A reimplementation of {@link java.util.Random}.
	COMMENT
	COMMENT <p>There are four built-in implementations, three based on the classic Java algorithm
	COMMENT and one using Xoroshiro128++ algorithm.
	COMMENT
	COMMENT <ul>
	COMMENT <li>{@link SimpleRandom}: Silently breaks when used concurrently. Based on
	COMMENT {@link java.util.Random}.</li>
	COMMENT <li>{@link AtomicSimpleRandom}: Throws when used concurrently. Based on
	COMMENT {@link java.util.Random}.</li>
	COMMENT <li>{@link BlockingSimpleRandom}: Blocks the thread when used concurrently.. Based on
	COMMENT {@link java.util.Random}.</li>
	COMMENT <li>{@link Xoroshiro128PlusPlusRandom}: Silently breaks when used concurrently.
	COMMENT Implements the Xoroshiro128++ algorithm.</li>
	COMMENT </ul>
	COMMENT
	COMMENT @implNote Note that due to MC-239059, this is not an exact reimplementation of
	COMMENT the Java random number generator algorithm.
	METHOD method_33650 skip (I)V
		ARG 1 count
	METHOD method_38420 derive ()Lnet/minecraft/class_5819;
	METHOD method_38421 createRandomDeriver ()Lnet/minecraft/class_6574;
	METHOD method_39332 nextBetween (II)I
		ARG 1 min
		ARG 2 max
	METHOD method_43047 createAtomic ()Lnet/minecraft/class_5819;
	METHOD method_43048 nextInt (I)I
		ARG 1 bound
	METHOD method_43049 createAtomic (J)Lnet/minecraft/class_5819;
		ARG 0 seed
	METHOD method_43050 createBlocking ()Lnet/minecraft/class_5819;
	METHOD method_43051 nextBetweenExclusive (II)I
		ARG 1 min
		ARG 2 max
	METHOD method_43052 setSeed (J)V
		ARG 1 seed
	METHOD method_43053 create ()Lnet/minecraft/class_5819;
	METHOD method_43054 nextInt ()I
	METHOD method_43055 nextLong ()J
	METHOD method_43056 nextBoolean ()Z
	METHOD method_43057 nextFloat ()F
	METHOD method_43058 nextDouble ()D
	METHOD method_43059 nextGaussian ()D
