CLASS com/mojang/blaze3d/systems/RenderSystem
	METHOD _setShaderColor (FFFF)V
		ARG 0 red
		ARG 1 green
		ARG 2 blue
		ARG 3 alpha
	METHOD _setShaderFogColor (FFFF)V
		ARG 0 red
		ARG 1 green
		ARG 2 blue
		ARG 3 alpha
	METHOD _setShaderFogEnd (F)V
		ARG 0 shaderFogEnd
	METHOD _setShaderFogShape (Lnet/minecraft/class_6854;)V
		ARG 0 shaderFogShape
	METHOD _setShaderFogStart (F)V
		ARG 0 shaderFogStart
	METHOD _setShaderTexture (II)V
		ARG 0 texture
		ARG 1 glId
	METHOD _setShaderTexture (ILnet/minecraft/class_2960;)V
		ARG 0 texture
		ARG 1 id
	METHOD activeTexture (I)V
		ARG 0 texture
	METHOD bindTexture (I)V
		ARG 0 texture
	METHOD bindTextureForSetup (I)V
		ARG 0 id
	METHOD blendEquation (I)V
		ARG 0 mode
	METHOD blendFunc (II)V
		ARG 0 srcFactor
		ARG 1 dstFactor
	METHOD blendFunc (Lcom/mojang/blaze3d/platform/GlStateManager$class_4535;Lcom/mojang/blaze3d/platform/GlStateManager$class_4534;)V
		ARG 0 srcFactor
		ARG 1 dstFactor
	METHOD blendFuncSeparate (IIII)V
		ARG 0 srcFactorRGB
		ARG 1 dstFactorRGB
		ARG 2 srcFactorAlpha
		ARG 3 dstFactorAlpha
	METHOD blendFuncSeparate (Lcom/mojang/blaze3d/platform/GlStateManager$class_4535;Lcom/mojang/blaze3d/platform/GlStateManager$class_4534;Lcom/mojang/blaze3d/platform/GlStateManager$class_4535;Lcom/mojang/blaze3d/platform/GlStateManager$class_4534;)V
		ARG 0 srcFactor
		ARG 1 dstFactor
		ARG 2 srcAlpha
		ARG 3 dstAlpha
	METHOD clear (IZ)V
		ARG 0 mask
		ARG 1 getError
	METHOD clearColor (FFFF)V
		ARG 0 red
		ARG 1 green
		ARG 2 blue
		ARG 3 alpha
	METHOD clearDepth (D)V
		ARG 0 depth
	METHOD clearStencil (I)V
		ARG 0 stencil
	METHOD colorMask (ZZZZ)V
		ARG 0 red
		ARG 1 green
		ARG 2 blue
		ARG 3 alpha
	METHOD deleteTexture (I)V
		ARG 0 texture
	METHOD depthFunc (I)V
		ARG 0 func
	METHOD depthMask (Z)V
		ARG 0 mask
	METHOD drawElements (III)V
		ARG 0 mode
		ARG 1 count
		ARG 2 type
	METHOD enableScissor (IIII)V
		ARG 0 x
		ARG 1 y
		ARG 2 width
		ARG 3 height
	METHOD flipFrame (J)V
		ARG 0 window
	METHOD getSequentialBuffer (Lnet/minecraft/class_293$class_5596;)Lcom/mojang/blaze3d/systems/RenderSystem$class_5590;
		ARG 0 drawMode
	METHOD getShaderTexture (I)I
		ARG 0 texture
	METHOD getString (ILjava/util/function/Consumer;)V
		ARG 0 name
		ARG 1 consumer
	METHOD getTextureId (I)I
		ARG 0 texture
	METHOD glBindBuffer (ILjava/util/function/IntSupplier;)V
		ARG 0 target
		ARG 1 bufferSupplier
	METHOD glBindVertexArray (Ljava/util/function/Supplier;)V
		ARG 0 arraySupplier
	METHOD glBufferData (ILjava/nio/ByteBuffer;I)V
		ARG 0 target
		ARG 1 data
		ARG 2 usage
	METHOD glDeleteBuffers (I)V
		ARG 0 buffer
	METHOD glDeleteVertexArrays (I)V
		ARG 0 array
	METHOD glGenBuffers (Ljava/util/function/Consumer;)V
		ARG 0 consumer
	METHOD glGenVertexArrays (Ljava/util/function/Consumer;)V
		ARG 0 consumer
	METHOD glUniform1 (ILjava/nio/FloatBuffer;)V
		ARG 0 location
		ARG 1 value
	METHOD glUniform1 (ILjava/nio/IntBuffer;)V
		ARG 0 location
		ARG 1 value
	METHOD glUniform1i (II)V
		ARG 0 location
		ARG 1 value
	METHOD glUniform2 (ILjava/nio/FloatBuffer;)V
		ARG 0 location
		ARG 1 value
	METHOD glUniform2 (ILjava/nio/IntBuffer;)V
		ARG 0 location
		ARG 1 value
	METHOD glUniform3 (ILjava/nio/FloatBuffer;)V
		ARG 0 location
		ARG 1 value
	METHOD glUniform3 (ILjava/nio/IntBuffer;)V
		ARG 0 location
		ARG 1 value
	METHOD glUniform4 (ILjava/nio/FloatBuffer;)V
		ARG 0 location
		ARG 1 value
	METHOD glUniform4 (ILjava/nio/IntBuffer;)V
		ARG 0 location
		ARG 1 value
	METHOD glUniformMatrix2 (IZLjava/nio/FloatBuffer;)V
		ARG 0 location
		ARG 1 transpose
		ARG 2 value
	METHOD glUniformMatrix3 (IZLjava/nio/FloatBuffer;)V
		ARG 0 location
		ARG 1 transpose
		ARG 2 value
	METHOD glUniformMatrix4 (IZLjava/nio/FloatBuffer;)V
		ARG 0 location
		ARG 1 transpose
		ARG 2 value
	METHOD initGameThread (Z)V
		ARG 0 assertNotRenderThread
	METHOD initRenderer (IZ)V
		ARG 0 debugVerbosity
		ARG 1 debugSync
	METHOD lambda$static$0 (Lit/unimi/dsi/fastutil/ints/IntConsumer;I)V
		ARG 0 indexConsumer
		ARG 1 firstVertexIndex
	METHOD lambda$static$1 (Lit/unimi/dsi/fastutil/ints/IntConsumer;I)V
		ARG 0 indexConsumer
		ARG 1 firstVertexIndex
	METHOD limitDisplayFPS (I)V
		ARG 0 fps
	METHOD lineWidth (F)V
		ARG 0 width
	METHOD logicOp (Lcom/mojang/blaze3d/platform/GlStateManager$class_1030;)V
		ARG 0 op
	METHOD pixelStore (II)V
		ARG 0 pname
		ARG 1 param
	METHOD polygonMode (II)V
		ARG 0 face
		ARG 1 mode
	METHOD polygonOffset (FF)V
		ARG 0 factor
		ARG 1 units
	METHOD readPixels (IIIIIILjava/nio/ByteBuffer;)V
		ARG 0 x
		ARG 1 y
		ARG 2 width
		ARG 3 height
		ARG 4 format
		ARG 5 type
		ARG 6 pixels
	METHOD recordRenderCall (Lnet/minecraft/class_4573;)V
		ARG 0 renderCall
	METHOD renderCrosshair (I)V
		ARG 0 size
	METHOD runAsFancy (Ljava/lang/Runnable;)V
		ARG 0 runnable
	METHOD setErrorCallback (Lorg/lwjgl/glfw/GLFWErrorCallbackI;)V
		ARG 0 callback
	METHOD setInverseViewRotationMatrix (Lorg/joml/Matrix3f;)V
		ARG 0 inverseViewRotationMatrix
	METHOD setProjectionMatrix (Lorg/joml/Matrix4f;)V
		ARG 0 projectionMatrix
	METHOD setShader (Ljava/util/function/Supplier;)V
		COMMENT Sets the {@code RenderSystem}'s global shader program.
		COMMENT
		COMMENT <p>Note that this sets both the vertex shader and the fragment shader
		COMMENT indirectly through the given shader program. The name of this method is
		COMMENT not obfuscated and is kept as is.
		ARG 0 program
	METHOD setShaderColor (FFFF)V
		ARG 0 red
		ARG 1 green
		ARG 2 blue
		ARG 3 alpha
	METHOD setShaderFogColor (FFF)V
		ARG 0 red
		ARG 1 green
		ARG 2 blue
	METHOD setShaderFogColor (FFFF)V
		ARG 0 red
		ARG 1 green
		ARG 2 blue
		ARG 3 alpha
	METHOD setShaderFogEnd (F)V
		ARG 0 shaderFogEnd
	METHOD setShaderFogShape (Lnet/minecraft/class_6854;)V
		ARG 0 shaderFogShape
	METHOD setShaderFogStart (F)V
		ARG 0 shaderFogStart
	METHOD setShaderGameTime (JF)V
		ARG 0 time
		ARG 2 tickDelta
	METHOD setShaderTexture (II)V
		ARG 0 texture
		ARG 1 glId
	METHOD setShaderTexture (ILnet/minecraft/class_2960;)V
		ARG 0 texture
		ARG 1 id
	METHOD setTextureMatrix (Lorg/joml/Matrix4f;)V
		ARG 0 textureMatrix
	METHOD setupDefaultState (IIII)V
		ARG 0 x
		ARG 1 y
		ARG 2 width
		ARG 3 height
	METHOD setupOverlayColor (Ljava/util/function/IntSupplier;I)V
		ARG 0 texture
		ARG 1 size
	METHOD setupShaderLights (Lnet/minecraft/class_5944;)V
		ARG 0 shader
	METHOD stencilFunc (III)V
		ARG 0 func
		ARG 1 ref
		ARG 2 mask
	METHOD stencilMask (I)V
		ARG 0 mask
	METHOD stencilOp (III)V
		ARG 0 sfail
		ARG 1 dpfail
		ARG 2 dppass
	METHOD texParameter (III)V
		ARG 0 target
		ARG 1 pname
		ARG 2 param
	METHOD viewport (IIII)V
		ARG 0 x
		ARG 1 y
		ARG 2 width
		ARG 3 height
	CLASS class_5590 ShapeIndexBuffer
		COMMENT An index buffer that holds a pre-made indices for a specific shape. If
		COMMENT this buffer is not large enough for the required number of indices when
		COMMENT this buffer is bound, it automatically grows and fills indices using a
		COMMENT given {@code triangulator}.
		FIELD field_27332 vertexCountInShape I
		FIELD field_27333 vertexCountInTriangulated I
		FIELD field_27334 triangulator Lcom/mojang/blaze3d/systems/RenderSystem$class_5590$class_5591;
		FIELD field_27335 id I
		FIELD field_27336 indexType Lnet/minecraft/class_293$class_5595;
		FIELD field_27337 size I
		METHOD <init> (IILcom/mojang/blaze3d/systems/RenderSystem$class_5590$class_5591;)V
			ARG 1 vertexCountInShape
				COMMENT the number of vertices in a shape
			ARG 2 vertexCountInTriangulated
				COMMENT the number of vertices in the triangles decomposed from the shape
			ARG 3 triangulator
				COMMENT a function that decomposes a shape into triangles
		METHOD method_31920 grow (I)V
			ARG 1 requiredSize
		METHOD method_31922 getIndexConsumer (Ljava/nio/ByteBuffer;)Lit/unimi/dsi/fastutil/ints/IntConsumer;
			ARG 1 indexBuffer
		METHOD method_31923 (Ljava/nio/ByteBuffer;I)V
			ARG 1 index
		METHOD method_31924 getIndexType ()Lnet/minecraft/class_293$class_5595;
		METHOD method_31925 (Ljava/nio/ByteBuffer;I)V
			ARG 1 index
		METHOD method_43409 isLargeEnough (I)Z
			ARG 1 requiredSize
		METHOD method_43410 bindAndGrow (I)V
			COMMENT Binds this buffer as a current index buffer. If necessary, it grows this
			COMMENT buffer in size and uploads indices to the corresponding buffer in GPU.
			ARG 1 requiredSize
		CLASS class_5591 Triangulator
			COMMENT A functional interface that decomposes a shape into triangles.
			COMMENT
			COMMENT <p>The input shape is represented by the index of the first vertex in
			COMMENT the shape. An output triangle is represented by the indices of the
			COMMENT vertices in the triangle.
			COMMENT
			COMMENT @see <a href="https://en.wikipedia.org/wiki/Polygon_triangulation">Polygon triangulation - Wikipedia</a>
			METHOD accept (Lit/unimi/dsi/fastutil/ints/IntConsumer;I)V
				COMMENT Decomposes a shape into triangles.
				ARG 1 indexConsumer
					COMMENT the consumer that accepts triangles
				ARG 2 firstVertexIndex
					COMMENT the index of the first vertex in the input shape
